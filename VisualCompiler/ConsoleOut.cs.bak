using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;
using System.Windows.Forms;

namespace VisualCompiler
{
    public class ConsoleOut
    {

        //      static FileStream textFile;
        private static string path = "C:\\Source\\XP3\\ConsoleOut.txt";

        private static bool finishedWrite = true;

        private static string partialText = "";

        // Install by creating the txt file
        static public void Install()
        {
            MessageBox.Show("String output to replace Console is in " + path);
            if (System.IO.File.Exists(path))
            {
                try
                {
                    System.IO.File.Delete(@path);
                }
                catch (System.IO.IOException e)
                {
                    Console.WriteLine(e.Message);
                    return;
                }
            }
            using (System.IO.FileStream textfile = System.IO.File.Create(path))
            {
            }
            //     textFile = System.IO.File.Create(path);

        } // end Install

        static public void Write(string text)
        {
            partialText += text;
        } // Write

        static public void WriteLine(String text)
        {
            if ((text == "") || (text == " "))
            {
                if (!finishedWrite)
                {
                    while (!finishedWrite) // wait while another thread finishes write
                    {
                        Thread.Sleep(10); // 10 milliseconds
                    }
                }
                finishedWrite = false;
                using (System.IO.StreamWriter textFile =
                    new System.IO.StreamWriter(@path, true))
                {
                    textFile.WriteLine(partialText);
                    partialText = ""; // clear for the next time
                }
                finishedWrite = true;
            }
            else
            {
                if (!finishedWrite)
                {
                    while (!finishedWrite) // wait while another thread finishes write
                    {
                        Thread.Sleep(10); // 10 milliseconds
                    }
                }
                finishedWrite = false;
                while (true)
                {
                    try
                    {
                        using (System.IO.StreamWriter textFile =
                               new System.IO.StreamWriter(@path, true))
                        {
                            textFile.WriteLine(text);
                        }
                        break; // exit loop
                    }
                    catch (IOException)
                   {
                   }
                }
                finishedWrite = true;
            }
            //       writeLine(text);
        } // end WriteLine


    } // end ConsoleOut class

} // end namespace
